name: Delete merged feature branch
run-name: Deleting feature branch - ${{ github.head_ref }}

on:
  pull_request:
    types: [closed]
    branches:
      - develop

permissions:
  contents: write
  pull-requests: read

concurrency:
  group: delete-merged-branch-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  delete-merged-branch:
    name: Delete head branch after merge to develop
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Decide whether branch should be deleted
        id: decide
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
          HEAD_REPO: ${{ github.event.pull_request.head.repo.full_name }}
          BASE_REPO: ${{ github.repository }}
        run: |
          set -euo pipefail

          echo "Head branch: $HEAD_REF"
          echo "Head repo:   $HEAD_REPO"
          echo "Base repo:   $BASE_REPO"

          # Only delete branches in the same repository (not forks)
          if [ "$HEAD_REPO" != "$BASE_REPO" ]; then
            echo "This PR originated from a fork. Skipping branch deletion."
            echo "delete_ref=" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Match naming convention: feature/bugfix/hotfix with [a-zA-Z0-9_\-]+
          if [[ "$HEAD_REF" =~ ^(feature|bugfix|hotfix)/[a-zA-Z0-9_\-]+$ ]]; then
            echo "Branch matches convention and is eligible for deletion."
            echo "delete_ref=$HEAD_REF" >> "$GITHUB_OUTPUT"
          else
            echo "Branch does not match deletion pattern. Skipping."
            echo "delete_ref=" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout repository for git operations
        if: steps.decide.outputs.delete_ref != ''
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete branch via GitHub API
        if: steps.decide.outputs.delete_ref != ''
        env:
          REPO: ${{ github.repository }}
          REF: ${{ steps.decide.outputs.delete_ref }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail

          echo "Deleting remote branch: $REF (refs/heads/$REF)"

          # First, check if the branch exists
          echo "üîç Checking if branch exists..."
          if ! gh api "repos/${REPO}/branches/${REF}" >/dev/null 2>&1; then
            echo "‚ÑπÔ∏è Branch $REF does not exist or is already deleted; skipping"
            exit 0
          fi

          echo "‚úÖ Branch $REF exists, proceeding with deletion..."

          # Use the correct API endpoint for deleting branches
          # The correct endpoint is repos/{owner}/{repo}/git/refs/heads/{branch}
          # For branches with slashes, we need to URL encode the slash
          ENC_REF=$(printf '%s' "$REF" | sed 's|/|%2F|g')

          echo "üóëÔ∏è Attempting to delete branch via API..."
          if gh api -X DELETE "repos/${REPO}/git/refs/heads/${ENC_REF}" 2>/dev/null; then
            echo "‚úÖ Successfully deleted branch: $REF"
          else
            echo "‚ö†Ô∏è Failed to delete branch via API, trying alternative method..."

            # Alternative method: use git push to delete
            echo "üîÑ Trying git push method..."
            if git push origin --delete "$REF" 2>/dev/null; then
              echo "‚úÖ Successfully deleted branch via git push: $REF"
            else
              echo "‚ùå Failed to delete branch $REF - it may be protected or already deleted"
              echo "‚ÑπÔ∏è This is not a critical error, continuing..."
            fi
          fi
